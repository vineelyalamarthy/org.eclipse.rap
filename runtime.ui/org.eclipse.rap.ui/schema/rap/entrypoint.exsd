<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.rap.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.rap.ui" id="entrypoint" name="EntryPoint"/>
      </appInfo>
      <documentation>
         A major difference between RCP and RAP is the way an application is started. With regular SWT applications you would use the &lt;code&gt;main(String[] args)&lt;/code&gt; method, in RCP an implementation of &lt;code&gt;IApplication&lt;/code&gt;. As RAP uses a life cycle to control the application startup the application needs an &lt;code&gt;IEntrypoint&lt;/code&gt; implementation which does mostly the same as &lt;code&gt;IApplication&lt;/code&gt;. The difference is that we need to do not dispose the display but return it to RAP in the &lt;code&gt;createUI&lt;/code&gt; method. There can be several entrypoints for the same application which are distinguished by a paramter in the URI for this application like &lt;code&gt;&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/rap?startup=&amp;lt;entrypointname&amp;gt;&lt;/code&gt;.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="entrypoint" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="entrypoint">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="parameter"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The identifier of this entrypoint. Used in &lt;code&gt;org.eclipse.rap.ui.branding&lt;/code&gt; extension point.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  An implementation of &lt;code&gt;IEntryPoint&lt;/code&gt; which starts the application.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.rwt.lifecycle.IEntryPoint"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="parameter" type="string" use="required">
            <annotation>
               <documentation>
                  The name which should be used from outside in the URI.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         RAP 1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;pre&gt;
&lt;extension
    id=&quot;org.eclipse.rap.demo.demoentrypoint&quot;
    point=&quot;org.eclipse.rap.ui.entrypoint&quot;&gt;
  &lt;entrypoint
     id=&quot;org.eclipse.rap.demo.entrypoint&quot;
        class=&quot;org.eclipse.rap.demo.MyAppEntrypoint&quot;
        parameter=&quot;myapp&quot;/&gt;
  &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Each entrypoint has to implement the &lt;code&gt;IEntryPoint&lt;/code&gt; interface. There is no API to register entrypoints on the fly. An entrypoint for a regular RCP application could look like this:

&lt;pre&gt;
public class MyAppEntrypoint implements IEntryPoint {

 public Display createUI() {
  Display display = PlatformUI.createDisplay();
  PlatformUI.createAndRunWorkbench( display, new ApplicationWorkbenchAdvisor() );
  return display;
 }
}
&lt;/pre&gt;
      </documentation>
   </annotation>


   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2007 Innoopract Informationssysteme GmbH and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made
available under the terms of the Eclipse Public License v1.0 which accompanies
this distribution, and is available at &lt;a 
href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
